services:

  redis:
    image: redis:7-alpine
    container_name: digital-twin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  web-api:
    depends_on:
      redis:
        condition: service_healthy
    build: .
    container_name: digital-twin-api
    ports:
      - "8000:8000"
    volumes:
      # Mount entire app directory for hot reload
      - .:/app
      # Exclude cache directories
      - /app/__pycache__
      # Persistent storage for generated files
      - output_data:/app/output
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - HEYGEN_API_KEY=${HEYGEN_API_KEY}
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-50}
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
      - PYTHONUNBUFFERED=1  # Ensure stdout/stderr are unbuffered
      - JOB_STORAGE=redis
      - REDIS_URL=redis://redis:6379
      - WORKERS=4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Production command with multiple workers
    command: ["python", "-Xfrozen_modules=off", "-m", "uvicorn", "web_api:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--log-level", "info"]

volumes:
  redis_data:
  output_data: